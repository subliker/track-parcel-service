/** Code generated using https://github.com/MrNemo64/go-n-i18n 
 * Any changes to this file will be lost on the next tool run */

package lang

import (
    "fmt"
    "strings"
)

func MessagesFor(tag string) (Messages, bool) {
    switch strings.ReplaceAll(tag, "_", "-") {
    case "ru-RU":
        return ru_RU_Messages{}, true
    }
    return nil, false
}

func MessagesForMust(tag string) Messages {
    switch strings.ReplaceAll(tag, "_", "-") {
    case "ru-RU":
        return ru_RU_Messages{}
    }
    panic(fmt.Errorf("unknwon language tag: " + tag))
}

func MessagesForOrDefault(tag string) Messages {
    switch strings.ReplaceAll(tag, "_", "-") {
    case "ru-RU":
        return ru_RU_Messages{}
    }
    return ru_RU_Messages{}
}

type Messages interface{
    Common() common
    StartMessage() startMessage
    Register() register
    Menu() menu
    AddParcel() addParcel
    MyApi() myApi
}
type common interface{
    Markup() commonmarkup
    Errors() commonerrors
}
type commonmarkup interface{
    BtnDontSpecify() string
}
type commonerrors interface{
    Internal() string
    IncorrectInput() string
    Length(min int, max int) string
    TimeFormat() string
    Email() string
    PhoneNumber() string
    AlreadyRegistered() string
}
type startMessage interface{
    Head(user_name string) string
    Main() string
    Markup() startMessagemarkup
}
type startMessagemarkup interface{
    Register() string
}
type register interface{
    Points() registerpoints
}
type registerpoints interface{
    FullName() string
    Email() string
    PhoneNumber() string
    Company() string
    Ready(name string, email string, phoneNumber string, company string) string
}
type menu interface{
    Main() string
    Markup() menumarkup
}
type menumarkup interface{
    AddParcel() string
    MyApi() string
}
type addParcel interface{
    Points() addParcelpoints
}
type addParcelpoints interface{
    Name() string
    Recipient() string
    ArrivalAddress() string
    ForecastDate() string
    Description() string
    Ready(name string, recipient string, arrivalAddress string, forecastDate string, description string, trackNum string) string
}
type myApi interface{
    Main(token string) string
}

type ru_RU_Messages struct{}
func (ru_RU_Messages) Common() common {
    return ru_RU_common{}
}
type ru_RU_common struct{}
func (ru_RU_common) Markup() commonmarkup {
    return ru_RU_commonmarkup{}
}
type ru_RU_commonmarkup struct{}
func (ru_RU_commonmarkup) BtnDontSpecify() string {
    return "–ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å"
}
func (ru_RU_common) Errors() commonerrors {
    return ru_RU_commonerrors{}
}
type ru_RU_commonerrors struct{}
func (ru_RU_commonerrors) Internal() string {
    return "üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
}
func (ru_RU_commonerrors) IncorrectInput() string {
    return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!"
}
func (ru_RU_commonerrors) Length(min int, max int) string {
    return fmt.Sprintf("üö´ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–ª–∏–Ω–∞: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç %d –¥–æ %d —Å–∏–º–≤–æ–ª–æ–≤. ‚úçÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!", min, max)
}
func (ru_RU_commonerrors) TimeFormat() string {
    return "‚è∞ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú. –ù–∞–ø—Ä–∏–º–µ—Ä: 24.12.2024 12:30. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!"
}
func (ru_RU_commonerrors) Email() string {
    return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—á—Ç—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: example@mail.com."
}
func (ru_RU_commonerrors) PhoneNumber() string {
    return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: +7 123 456-78-90."
}
func (ru_RU_commonerrors) AlreadyRegistered() string {
    return "‚ö†Ô∏è –û—à–∏–±–∫–∞! –≠—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!"
}
func (ru_RU_Messages) StartMessage() startMessage {
    return ru_RU_startMessage{}
}
type ru_RU_startMessage struct{}
func (ru_RU_startMessage) Head(user_name string) string {
    if user_name == "" {
        return "‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ‚ú®"
    } else {
        return fmt.Sprintf("‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s! ‚ú®", user_name)
    }
}
func (ru_RU_startMessage) Main() string {
    return "_–ú—ã —É–ø—Ä–æ—â–∞–µ–º —Ä–∞–±–æ—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ —Å –ø–æ—Å—ã–ª–∫–∞–º–∏! –° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ:_" + "\n" +
        "" + "\n" +
        " ‚Ä¢ üì¶ –õ–µ–≥–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Å—ã–ª–∫–∏" + "\n" +
        " ‚Ä¢ üó∫Ô∏è –î–æ–±–∞–≤–ª—è—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç—ã —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏" + "\n" +
        " ‚Ä¢ üîç –ë—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é" + "\n" +
        "" + "\n" +
        "_–ù–∞—á–Ω–∏—Ç–µ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞!_" + "\n" +
        "*–ö–Ω–æ–ø–∫–∞*: \"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è\""
}
func (ru_RU_startMessage) Markup() startMessagemarkup {
    return ru_RU_startMessagemarkup{}
}
type ru_RU_startMessagemarkup struct{}
func (ru_RU_startMessagemarkup) Register() string {
    return "‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"
}
func (ru_RU_Messages) Register() register {
    return ru_RU_register{}
}
type ru_RU_register struct{}
func (ru_RU_register) Points() registerpoints {
    return ru_RU_registerpoints{}
}
type ru_RU_registerpoints struct{}
func (ru_RU_registerpoints) FullName() string {
    return "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏! üìù" + "\n" +
        "_–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–∞–º –ø–æ –∏–º–µ–Ω–∏. –≠—Ç–æ –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—É–±–ª–∏—á–Ω–æ, —Ç–∞–∫ —á—Ç–æ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–µ –ø—Ä–æ—Ç–∏–≤!_" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á_"
}
func (ru_RU_registerpoints) Email() string {
    return "–¢–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –≤–∞—à email! üìß" + "\n" +
        "_–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞—à–∏–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å –≤–∞–º–∏ —Å–≤—è–∑—å –ø–æ –ø–æ—á—Ç–µ._" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: ivanov@example.com_"
}
func (ru_RU_registerpoints) PhoneNumber() string {
    return "–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –¥–æ–±–∞–≤–∏–º –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞! üì±" + "\n" +
        "_–≠—Ç–æ—Ç —à–∞–≥ –æ–ø—Ü–∏–æ–Ω–∞–ª–µ–Ω, –Ω–æ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É ‚Äî —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä._" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: +7 (999) 123-45-67_"
}
func (ru_RU_registerpoints) Company() string {
    return "–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏! üè¢" + "\n" +
        "_–≠—Ç–æ –ø–æ–ª–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–º–ø–∞–Ω–∏—è, —Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –µ–µ —Å—é–¥–∞. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –ø—É–±–ª–∏—á–Ω–æ._" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: –û–û–û '–¢–µ—Ö–Ω–æ–ü–∞—Ä—Ç'_"
}
func (ru_RU_registerpoints) Ready(name string, email string, phoneNumber string, company string) string {
    return "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ" + "\n" +
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞. –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ! üôå" + "\n" +
        "–í–æ—Ç —á—Ç–æ —Ç–µ–ø–µ—Ä—å –≤–∏–¥—è—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–∏:" + "\n" +
        fmt.Sprintf("*–ò–º—è:* %s", name) + "\n" +
        fmt.Sprintf("*Email:* %s", email) + "\n" +
        fmt.Sprintf("*–¢–µ–ª–µ—Ñ–æ–Ω:* %s", phoneNumber) + "\n" +
        fmt.Sprintf("*–ö–æ–º–ø–∞–Ω–∏—è:* %s", company) + "\n" +
        "" + "\n" +
        "_–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è. üëá_"
}
func (ru_RU_Messages) Menu() menu {
    return ru_RU_menu{}
}
type ru_RU_menu struct{}
func (ru_RU_menu) Main() string {
    return "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å! üôå" + "\n" +
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—ã–ª–∫–∞–º–∏ –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ. –í—Å—ë, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ ‚Äî –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ. üì¶" + "\n" +
        "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ *–æ–ø—Ü–∏–π*!"
}
func (ru_RU_menu) Markup() menumarkup {
    return ru_RU_menumarkup{}
}
type ru_RU_menumarkup struct{}
func (ru_RU_menumarkup) AddParcel() string {
    return "üì¶ –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—ã–ª–∫—É"
}
func (ru_RU_menumarkup) MyApi() string {
    return "üîë –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω"
}
func (ru_RU_Messages) AddParcel() addParcel {
    return ru_RU_addParcel{}
}
type ru_RU_addParcel struct{}
func (ru_RU_addParcel) Points() addParcelpoints {
    return ru_RU_addParcelpoints{}
}
type ru_RU_addParcelpoints struct{}
func (ru_RU_addParcelpoints) Name() string {
    return "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∞—à–µ–π –ø–æ—Å—ã–ª–∫–∏! üì¶" + "\n" +
        "_–£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–≤–∞—Ç—å –≤–∞—à—É –ø–æ—Å—ã–ª–∫—É. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—é –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö –ø–æ—Å—ã–ª–æ–∫._" + "\n" +
        "_–ù–∞–∑–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—É–±–ª–∏—á–Ω–æ, —Ç–∞–∫ —á—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-—Ç–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ!_" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: –ù–æ—É—Ç–±—É–∫ Xiaomi Redmibook 6600H 16/512gb_"
}
func (ru_RU_addParcelpoints) Recipient() string {
    return "–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ, –∫—Ç–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –ø–æ—Å—ã–ª–∫—É! üìß" + "\n" +
        "_–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∂–∞–ª–æ—Å—å –∫–æ–º—É —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ—Å—ã–ª–∫—É. –≠—Ç–æ –ø–æ–ª–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—É–±–ª–∏—á–Ω–æ._" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω_"
}
func (ru_RU_addParcelpoints) ArrivalAddress() string {
    return "–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å—ã–ª–∫—É! üè†" + "\n" +
        "_–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏. –≠—Ç–æ –ø–æ–ª–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—É–±–ª–∏—á–Ω–æ, –ø–æ—ç—Ç–æ–º—É —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π._" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, 10, –∫–≤. 15_"
}
func (ru_RU_addParcelpoints) ForecastDate() string {
    return "–ö–æ–≥–¥–∞ –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å—ã–ª–∫—É? üìÖ" + "\n" +
        "_–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –ø–æ—Å—ã–ª–∫–∞ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞. –ù–∞ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ–ª—É—á–∞—Ç–µ–ª—å!._" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: 24.12.2024 12:30_"
}
func (ru_RU_addParcelpoints) Description() string {
    return "–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –ø–æ—Å—ã–ª–∫–∏! ‚úèÔ∏è" + "\n" +
        "_–£–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –ø–æ—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–º–æ—á—å –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ—ë. –≠—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç –ø—É–±–ª–∏—á–Ω–æ._" + "\n" +
        "" + "\n" +
        "_–ü—Ä–∏–º–µ—Ä: –†–∞–∑–º–µ—Ä—ã 350.1 x 242.3 x 14.9 –º–º –í–µ—Å 1.8 –∫–≥_"
}
func (ru_RU_addParcelpoints) Ready(name string, recipient string, arrivalAddress string, forecastDate string, description string, trackNum string) string {
    return "–í–∞—à–∞ –ø–æ—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞! üéâ" + "\n" +
        "–í–æ—Ç —á—Ç–æ –º—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏:" + "\n" +
        fmt.Sprintf("*–ù–∞–∑–≤–∞–Ω–∏–µ:* %s", name) + "\n" +
        fmt.Sprintf("*–ü–æ–ª—É—á–∞—Ç–µ–ª—å* %s", recipient) + "\n" +
        fmt.Sprintf("*–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:* %s", arrivalAddress) + "\n" +
        fmt.Sprintf("*–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è –¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:* %s", forecastDate) + "\n" +
        fmt.Sprintf("*–û–ø–∏—Å–∞–Ω–∏–µ:* %s", description) + "\n" +
        fmt.Sprintf("–í–∞—à–µ–π –ø–æ—Å—ã–ª–∫–µ –±—ã–ª –ø—Ä–∏—Å—É–∂–¥–µ–Ω —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä: `%s`", trackNum) + "\n" +
        "" + "\n" +
        "_–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—ã–ª–∫–∞–º–∏. üìù_"
}
func (ru_RU_Messages) MyApi() myApi {
    return ru_RU_myApi{}
}
type ru_RU_myApi struct{}
func (ru_RU_myApi) Main(token string) string {
    return fmt.Sprintf("üîë –í–∞—à API —Ç–æ–∫–µ–Ω: `%s`", token) + "\n" +
        "" + "\n" +
        "–≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ –∞–¥—Ä–µ—Å—É localhost:8080, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—ã–ª–∫–∞–º–∏ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ö—Ä–∞–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –µ–≥–æ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º –ª–∏—Ü–∞–º."
}


