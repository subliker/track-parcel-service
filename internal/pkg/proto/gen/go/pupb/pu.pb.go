// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: pu/pu.proto

package pupb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParcelStatus int32

const (
	ParcelStatus_UNKNOWN    ParcelStatus = 0
	ParcelStatus_PENDING    ParcelStatus = 1
	ParcelStatus_IN_TRANSIT ParcelStatus = 2
	ParcelStatus_DELIVERED  ParcelStatus = 3
	ParcelStatus_CANCELED   ParcelStatus = 4
)

// Enum value maps for ParcelStatus.
var (
	ParcelStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "IN_TRANSIT",
		3: "DELIVERED",
		4: "CANCELED",
	}
	ParcelStatus_value = map[string]int32{
		"UNKNOWN":    0,
		"PENDING":    1,
		"IN_TRANSIT": 2,
		"DELIVERED":  3,
		"CANCELED":   4,
	}
)

func (x ParcelStatus) Enum() *ParcelStatus {
	p := new(ParcelStatus)
	*p = x
	return p
}

func (x ParcelStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParcelStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pu_pu_proto_enumTypes[0].Descriptor()
}

func (ParcelStatus) Type() protoreflect.EnumType {
	return &file_pu_pu_proto_enumTypes[0]
}

func (x ParcelStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParcelStatus.Descriptor instead.
func (ParcelStatus) EnumDescriptor() ([]byte, []int) {
	return file_pu_pu_proto_rawDescGZIP(), []int{0}
}

type GetParcelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackNumber    string `protobuf:"bytes,1,opt,name=track_number,json=trackNumber,proto3" json:"track_number,omitempty"`
	UserTelegramId int64  `protobuf:"varint,2,opt,name=user_telegram_id,json=userTelegramId,proto3" json:"user_telegram_id,omitempty"`
}

func (x *GetParcelRequest) Reset() {
	*x = GetParcelRequest{}
	mi := &file_pu_pu_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParcelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParcelRequest) ProtoMessage() {}

func (x *GetParcelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pu_pu_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParcelRequest.ProtoReflect.Descriptor instead.
func (*GetParcelRequest) Descriptor() ([]byte, []int) {
	return file_pu_pu_proto_rawDescGZIP(), []int{0}
}

func (x *GetParcelRequest) GetTrackNumber() string {
	if x != nil {
		return x.TrackNumber
	}
	return ""
}

func (x *GetParcelRequest) GetUserTelegramId() int64 {
	if x != nil {
		return x.UserTelegramId
	}
	return 0
}

type GetParcelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParcelName           string                 `protobuf:"bytes,1,opt,name=parcel_name,json=parcelName,proto3" json:"parcel_name,omitempty"`
	ManagerTelegramId    int64                  `protobuf:"varint,2,opt,name=manager_telegram_id,json=managerTelegramId,proto3" json:"manager_telegram_id,omitempty"`
	ParcelRecipient      string                 `protobuf:"bytes,3,opt,name=parcel_recipient,json=parcelRecipient,proto3" json:"parcel_recipient,omitempty"`
	ParcelArrivalAddress string                 `protobuf:"bytes,4,opt,name=parcel_arrival_address,json=parcelArrivalAddress,proto3" json:"parcel_arrival_address,omitempty"`
	ParcelForecastDate   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=parcel_forecast_date,json=parcelForecastDate,proto3" json:"parcel_forecast_date,omitempty"`
	ParcelDescription    string                 `protobuf:"bytes,8,opt,name=parcel_description,json=parcelDescription,proto3" json:"parcel_description,omitempty"`
	ParcelStatus         ParcelStatus           `protobuf:"varint,9,opt,name=parcel_status,json=parcelStatus,proto3,enum=pupb.ParcelStatus" json:"parcel_status,omitempty"`
	Subscribed           bool                   `protobuf:"varint,10,opt,name=subscribed,proto3" json:"subscribed,omitempty"`
}

func (x *GetParcelResponse) Reset() {
	*x = GetParcelResponse{}
	mi := &file_pu_pu_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParcelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParcelResponse) ProtoMessage() {}

func (x *GetParcelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pu_pu_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParcelResponse.ProtoReflect.Descriptor instead.
func (*GetParcelResponse) Descriptor() ([]byte, []int) {
	return file_pu_pu_proto_rawDescGZIP(), []int{1}
}

func (x *GetParcelResponse) GetParcelName() string {
	if x != nil {
		return x.ParcelName
	}
	return ""
}

func (x *GetParcelResponse) GetManagerTelegramId() int64 {
	if x != nil {
		return x.ManagerTelegramId
	}
	return 0
}

func (x *GetParcelResponse) GetParcelRecipient() string {
	if x != nil {
		return x.ParcelRecipient
	}
	return ""
}

func (x *GetParcelResponse) GetParcelArrivalAddress() string {
	if x != nil {
		return x.ParcelArrivalAddress
	}
	return ""
}

func (x *GetParcelResponse) GetParcelForecastDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ParcelForecastDate
	}
	return nil
}

func (x *GetParcelResponse) GetParcelDescription() string {
	if x != nil {
		return x.ParcelDescription
	}
	return ""
}

func (x *GetParcelResponse) GetParcelStatus() ParcelStatus {
	if x != nil {
		return x.ParcelStatus
	}
	return ParcelStatus_UNKNOWN
}

func (x *GetParcelResponse) GetSubscribed() bool {
	if x != nil {
		return x.Subscribed
	}
	return false
}

type GetCheckpointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackNumber string `protobuf:"bytes,1,opt,name=track_number,json=trackNumber,proto3" json:"track_number,omitempty"`
	Page        uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize    uint64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetCheckpointsRequest) Reset() {
	*x = GetCheckpointsRequest{}
	mi := &file_pu_pu_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCheckpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointsRequest) ProtoMessage() {}

func (x *GetCheckpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pu_pu_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointsRequest.ProtoReflect.Descriptor instead.
func (*GetCheckpointsRequest) Descriptor() ([]byte, []int) {
	return file_pu_pu_proto_rawDescGZIP(), []int{2}
}

func (x *GetCheckpointsRequest) GetTrackNumber() string {
	if x != nil {
		return x.TrackNumber
	}
	return ""
}

func (x *GetCheckpointsRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCheckpointsRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetCheckpointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoints []*Checkpoint `protobuf:"bytes,1,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
}

func (x *GetCheckpointsResponse) Reset() {
	*x = GetCheckpointsResponse{}
	mi := &file_pu_pu_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCheckpointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointsResponse) ProtoMessage() {}

func (x *GetCheckpointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pu_pu_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointsResponse.ProtoReflect.Descriptor instead.
func (*GetCheckpointsResponse) Descriptor() ([]byte, []int) {
	return file_pu_pu_proto_rawDescGZIP(), []int{3}
}

func (x *GetCheckpointsResponse) GetCheckpoints() []*Checkpoint {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

type Checkpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Place       string                 `protobuf:"bytes,2,opt,name=place,proto3" json:"place,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Checkpoint) Reset() {
	*x = Checkpoint{}
	mi := &file_pu_pu_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint) ProtoMessage() {}

func (x *Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_pu_pu_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return file_pu_pu_proto_rawDescGZIP(), []int{4}
}

func (x *Checkpoint) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Checkpoint) GetPlace() string {
	if x != nil {
		return x.Place
	}
	return ""
}

func (x *Checkpoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackNumber    string `protobuf:"bytes,1,opt,name=track_number,json=trackNumber,proto3" json:"track_number,omitempty"`
	UserTelegramId int64  `protobuf:"varint,2,opt,name=user_telegram_id,json=userTelegramId,proto3" json:"user_telegram_id,omitempty"`
}

func (x *AddSubscriptionRequest) Reset() {
	*x = AddSubscriptionRequest{}
	mi := &file_pu_pu_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubscriptionRequest) ProtoMessage() {}

func (x *AddSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pu_pu_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*AddSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_pu_pu_proto_rawDescGZIP(), []int{5}
}

func (x *AddSubscriptionRequest) GetTrackNumber() string {
	if x != nil {
		return x.TrackNumber
	}
	return ""
}

func (x *AddSubscriptionRequest) GetUserTelegramId() int64 {
	if x != nil {
		return x.UserTelegramId
	}
	return 0
}

type DeleteSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackNumber    string `protobuf:"bytes,1,opt,name=track_number,json=trackNumber,proto3" json:"track_number,omitempty"`
	UserTelegramId int64  `protobuf:"varint,2,opt,name=user_telegram_id,json=userTelegramId,proto3" json:"user_telegram_id,omitempty"`
}

func (x *DeleteSubscriptionRequest) Reset() {
	*x = DeleteSubscriptionRequest{}
	mi := &file_pu_pu_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionRequest) ProtoMessage() {}

func (x *DeleteSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pu_pu_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_pu_pu_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSubscriptionRequest) GetTrackNumber() string {
	if x != nil {
		return x.TrackNumber
	}
	return ""
}

func (x *DeleteSubscriptionRequest) GetUserTelegramId() int64 {
	if x != nil {
		return x.UserTelegramId
	}
	return 0
}

var File_pu_pu_proto protoreflect.FileDescriptor

var file_pu_pu_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x75, 0x2f, 0x70, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70,
	0x75, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x22, 0x9b, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x63,
	0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x63, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72,
	0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x70, 0x61,
	0x72, 0x63, 0x65, 0x6c, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x63,
	0x65, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x63, 0x65,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x75, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64,
	0x22, 0x6b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4c, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x75, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x74, 0x0a, 0x0a, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x65, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x2a, 0x55, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x32, 0xb0, 0x02, 0x0a, 0x0b, 0x50, 0x61,
	0x72, 0x63, 0x65, 0x6c, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x75, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x70, 0x75, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x75, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x75, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x75, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x75, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x07, 0x5a, 0x05,
	0x70, 0x75, 0x70, 0x62, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pu_pu_proto_rawDescOnce sync.Once
	file_pu_pu_proto_rawDescData = file_pu_pu_proto_rawDesc
)

func file_pu_pu_proto_rawDescGZIP() []byte {
	file_pu_pu_proto_rawDescOnce.Do(func() {
		file_pu_pu_proto_rawDescData = protoimpl.X.CompressGZIP(file_pu_pu_proto_rawDescData)
	})
	return file_pu_pu_proto_rawDescData
}

var file_pu_pu_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pu_pu_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pu_pu_proto_goTypes = []any{
	(ParcelStatus)(0),                 // 0: pupb.ParcelStatus
	(*GetParcelRequest)(nil),          // 1: pupb.GetParcelRequest
	(*GetParcelResponse)(nil),         // 2: pupb.GetParcelResponse
	(*GetCheckpointsRequest)(nil),     // 3: pupb.GetCheckpointsRequest
	(*GetCheckpointsResponse)(nil),    // 4: pupb.GetCheckpointsResponse
	(*Checkpoint)(nil),                // 5: pupb.Checkpoint
	(*AddSubscriptionRequest)(nil),    // 6: pupb.AddSubscriptionRequest
	(*DeleteSubscriptionRequest)(nil), // 7: pupb.DeleteSubscriptionRequest
	(*timestamppb.Timestamp)(nil),     // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 9: google.protobuf.Empty
}
var file_pu_pu_proto_depIdxs = []int32{
	8, // 0: pupb.GetParcelResponse.parcel_forecast_date:type_name -> google.protobuf.Timestamp
	0, // 1: pupb.GetParcelResponse.parcel_status:type_name -> pupb.ParcelStatus
	5, // 2: pupb.GetCheckpointsResponse.checkpoints:type_name -> pupb.Checkpoint
	8, // 3: pupb.Checkpoint.time:type_name -> google.protobuf.Timestamp
	1, // 4: pupb.ParcelsUser.GetParcel:input_type -> pupb.GetParcelRequest
	3, // 5: pupb.ParcelsUser.GetCheckpoints:input_type -> pupb.GetCheckpointsRequest
	6, // 6: pupb.ParcelsUser.AddSubscription:input_type -> pupb.AddSubscriptionRequest
	7, // 7: pupb.ParcelsUser.DeleteSubscription:input_type -> pupb.DeleteSubscriptionRequest
	2, // 8: pupb.ParcelsUser.GetParcel:output_type -> pupb.GetParcelResponse
	4, // 9: pupb.ParcelsUser.GetCheckpoints:output_type -> pupb.GetCheckpointsResponse
	9, // 10: pupb.ParcelsUser.AddSubscription:output_type -> google.protobuf.Empty
	9, // 11: pupb.ParcelsUser.DeleteSubscription:output_type -> google.protobuf.Empty
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pu_pu_proto_init() }
func file_pu_pu_proto_init() {
	if File_pu_pu_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pu_pu_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pu_pu_proto_goTypes,
		DependencyIndexes: file_pu_pu_proto_depIdxs,
		EnumInfos:         file_pu_pu_proto_enumTypes,
		MessageInfos:      file_pu_pu_proto_msgTypes,
	}.Build()
	File_pu_pu_proto = out.File
	file_pu_pu_proto_rawDesc = nil
	file_pu_pu_proto_goTypes = nil
	file_pu_pu_proto_depIdxs = nil
}
