// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.0--rc1
// source: pms/pms.proto

package pms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParcelStatus int32

const (
	ParcelStatus_UNKNOWN    ParcelStatus = 0
	ParcelStatus_PENDING    ParcelStatus = 1
	ParcelStatus_IN_TRANSIT ParcelStatus = 2
	ParcelStatus_DELIVERED  ParcelStatus = 3
	ParcelStatus_CANCELED   ParcelStatus = 4
)

// Enum value maps for ParcelStatus.
var (
	ParcelStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "IN_TRANSIT",
		3: "DELIVERED",
		4: "CANCELED",
	}
	ParcelStatus_value = map[string]int32{
		"UNKNOWN":    0,
		"PENDING":    1,
		"IN_TRANSIT": 2,
		"DELIVERED":  3,
		"CANCELED":   4,
	}
)

func (x ParcelStatus) Enum() *ParcelStatus {
	p := new(ParcelStatus)
	*p = x
	return p
}

func (x ParcelStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParcelStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pms_pms_proto_enumTypes[0].Descriptor()
}

func (ParcelStatus) Type() protoreflect.EnumType {
	return &file_pms_pms_proto_enumTypes[0]
}

func (x ParcelStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParcelStatus.Descriptor instead.
func (ParcelStatus) EnumDescriptor() ([]byte, []int) {
	return file_pms_pms_proto_rawDescGZIP(), []int{0}
}

type AddParcelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParcelName           string                 `protobuf:"bytes,1,opt,name=parcel_name,json=parcelName,proto3" json:"parcel_name,omitempty"`
	ManagerTelegramId    string                 `protobuf:"bytes,2,opt,name=manager_telegram_id,json=managerTelegramId,proto3" json:"manager_telegram_id,omitempty"`
	ParcelRecipient      string                 `protobuf:"bytes,3,opt,name=parcel_recipient,json=parcelRecipient,proto3" json:"parcel_recipient,omitempty"`
	ParcelArrivalAddress string                 `protobuf:"bytes,4,opt,name=parcel_arrival_address,json=parcelArrivalAddress,proto3" json:"parcel_arrival_address,omitempty"`
	ParcelForecastDate   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=parcel_forecast_date,json=parcelForecastDate,proto3" json:"parcel_forecast_date,omitempty"`
	ParcelDescription    string                 `protobuf:"bytes,8,opt,name=parcel_description,json=parcelDescription,proto3" json:"parcel_description,omitempty"`
	ParcelStatus         ParcelStatus           `protobuf:"varint,9,opt,name=parcel_status,json=parcelStatus,proto3,enum=pms.ParcelStatus" json:"parcel_status,omitempty"`
	ParcelCheckpoints    []*Checkpoint          `protobuf:"bytes,10,rep,name=parcel_checkpoints,json=parcelCheckpoints,proto3" json:"parcel_checkpoints,omitempty"`
}

func (x *AddParcelRequest) Reset() {
	*x = AddParcelRequest{}
	mi := &file_pms_pms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddParcelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddParcelRequest) ProtoMessage() {}

func (x *AddParcelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pms_pms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddParcelRequest.ProtoReflect.Descriptor instead.
func (*AddParcelRequest) Descriptor() ([]byte, []int) {
	return file_pms_pms_proto_rawDescGZIP(), []int{0}
}

func (x *AddParcelRequest) GetParcelName() string {
	if x != nil {
		return x.ParcelName
	}
	return ""
}

func (x *AddParcelRequest) GetManagerTelegramId() string {
	if x != nil {
		return x.ManagerTelegramId
	}
	return ""
}

func (x *AddParcelRequest) GetParcelRecipient() string {
	if x != nil {
		return x.ParcelRecipient
	}
	return ""
}

func (x *AddParcelRequest) GetParcelArrivalAddress() string {
	if x != nil {
		return x.ParcelArrivalAddress
	}
	return ""
}

func (x *AddParcelRequest) GetParcelForecastDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ParcelForecastDate
	}
	return nil
}

func (x *AddParcelRequest) GetParcelDescription() string {
	if x != nil {
		return x.ParcelDescription
	}
	return ""
}

func (x *AddParcelRequest) GetParcelStatus() ParcelStatus {
	if x != nil {
		return x.ParcelStatus
	}
	return ParcelStatus_UNKNOWN
}

func (x *AddParcelRequest) GetParcelCheckpoints() []*Checkpoint {
	if x != nil {
		return x.ParcelCheckpoints
	}
	return nil
}

type Checkpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Place       string                 `protobuf:"bytes,2,opt,name=place,proto3" json:"place,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Checkpoint) Reset() {
	*x = Checkpoint{}
	mi := &file_pms_pms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint) ProtoMessage() {}

func (x *Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_pms_pms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return file_pms_pms_proto_rawDescGZIP(), []int{1}
}

func (x *Checkpoint) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Checkpoint) GetPlace() string {
	if x != nil {
		return x.Place
	}
	return ""
}

func (x *Checkpoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddParcelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParcelId string `protobuf:"bytes,1,opt,name=parcel_id,json=parcelId,proto3" json:"parcel_id,omitempty"`
}

func (x *AddParcelResponse) Reset() {
	*x = AddParcelResponse{}
	mi := &file_pms_pms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddParcelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddParcelResponse) ProtoMessage() {}

func (x *AddParcelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pms_pms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddParcelResponse.ProtoReflect.Descriptor instead.
func (*AddParcelResponse) Descriptor() ([]byte, []int) {
	return file_pms_pms_proto_rawDescGZIP(), []int{2}
}

func (x *AddParcelResponse) GetParcelId() string {
	if x != nil {
		return x.ParcelId
	}
	return ""
}

type DeleteParcelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParcelId string `protobuf:"bytes,1,opt,name=parcel_id,json=parcelId,proto3" json:"parcel_id,omitempty"`
}

func (x *DeleteParcelRequest) Reset() {
	*x = DeleteParcelRequest{}
	mi := &file_pms_pms_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteParcelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteParcelRequest) ProtoMessage() {}

func (x *DeleteParcelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pms_pms_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteParcelRequest.ProtoReflect.Descriptor instead.
func (*DeleteParcelRequest) Descriptor() ([]byte, []int) {
	return file_pms_pms_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteParcelRequest) GetParcelId() string {
	if x != nil {
		return x.ParcelId
	}
	return ""
}

type GetParcelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParcelId string `protobuf:"bytes,1,opt,name=parcel_id,json=parcelId,proto3" json:"parcel_id,omitempty"`
}

func (x *GetParcelRequest) Reset() {
	*x = GetParcelRequest{}
	mi := &file_pms_pms_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParcelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParcelRequest) ProtoMessage() {}

func (x *GetParcelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pms_pms_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParcelRequest.ProtoReflect.Descriptor instead.
func (*GetParcelRequest) Descriptor() ([]byte, []int) {
	return file_pms_pms_proto_rawDescGZIP(), []int{4}
}

func (x *GetParcelRequest) GetParcelId() string {
	if x != nil {
		return x.ParcelId
	}
	return ""
}

type GetParcelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParcelName           string                 `protobuf:"bytes,1,opt,name=parcel_name,json=parcelName,proto3" json:"parcel_name,omitempty"`
	ManagerTelegramId    string                 `protobuf:"bytes,2,opt,name=manager_telegram_id,json=managerTelegramId,proto3" json:"manager_telegram_id,omitempty"`
	ParcelRecipient      string                 `protobuf:"bytes,3,opt,name=parcel_recipient,json=parcelRecipient,proto3" json:"parcel_recipient,omitempty"`
	ParcelArrivalAddress string                 `protobuf:"bytes,4,opt,name=parcel_arrival_address,json=parcelArrivalAddress,proto3" json:"parcel_arrival_address,omitempty"`
	ParcelForecastDate   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=parcel_forecast_date,json=parcelForecastDate,proto3" json:"parcel_forecast_date,omitempty"`
	ParcelDescription    string                 `protobuf:"bytes,8,opt,name=parcel_description,json=parcelDescription,proto3" json:"parcel_description,omitempty"`
	ParcelStatus         ParcelStatus           `protobuf:"varint,9,opt,name=parcel_status,json=parcelStatus,proto3,enum=pms.ParcelStatus" json:"parcel_status,omitempty"`
	ParcelCheckpoints    []*Checkpoint          `protobuf:"bytes,10,rep,name=parcel_checkpoints,json=parcelCheckpoints,proto3" json:"parcel_checkpoints,omitempty"`
}

func (x *GetParcelResponse) Reset() {
	*x = GetParcelResponse{}
	mi := &file_pms_pms_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParcelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParcelResponse) ProtoMessage() {}

func (x *GetParcelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pms_pms_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParcelResponse.ProtoReflect.Descriptor instead.
func (*GetParcelResponse) Descriptor() ([]byte, []int) {
	return file_pms_pms_proto_rawDescGZIP(), []int{5}
}

func (x *GetParcelResponse) GetParcelName() string {
	if x != nil {
		return x.ParcelName
	}
	return ""
}

func (x *GetParcelResponse) GetManagerTelegramId() string {
	if x != nil {
		return x.ManagerTelegramId
	}
	return ""
}

func (x *GetParcelResponse) GetParcelRecipient() string {
	if x != nil {
		return x.ParcelRecipient
	}
	return ""
}

func (x *GetParcelResponse) GetParcelArrivalAddress() string {
	if x != nil {
		return x.ParcelArrivalAddress
	}
	return ""
}

func (x *GetParcelResponse) GetParcelForecastDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ParcelForecastDate
	}
	return nil
}

func (x *GetParcelResponse) GetParcelDescription() string {
	if x != nil {
		return x.ParcelDescription
	}
	return ""
}

func (x *GetParcelResponse) GetParcelStatus() ParcelStatus {
	if x != nil {
		return x.ParcelStatus
	}
	return ParcelStatus_UNKNOWN
}

func (x *GetParcelResponse) GetParcelCheckpoints() []*Checkpoint {
	if x != nil {
		return x.ParcelCheckpoints
	}
	return nil
}

var File_pms_pms_proto protoreflect.FileDescriptor

var file_pms_pms_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x6d, 0x73, 0x2f, 0x70, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x70, 0x6d, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb9, 0x03, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x63, 0x65,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x63, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x63,
	0x65, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x70, 0x61, 0x72,
	0x63, 0x65, 0x6c, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x12, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x63, 0x65,
	0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0c, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e,
	0x0a, 0x12, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x11, 0x70, 0x61, 0x72,
	0x63, 0x65, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x74,
	0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x63, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x63, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xba, 0x03, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61,
	0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x16, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70,
	0x61, 0x72, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x66, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x70,
	0x61, 0x72, 0x63, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x61, 0x72, 0x63, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x61,
	0x72, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x63,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x63,
	0x65, 0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x11, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2a, 0x55, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x63,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x32,
	0xca, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x12,
	0x15, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x12, 0x18,
	0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x3a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x12, 0x15, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04,
	0x2f, 0x70, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pms_pms_proto_rawDescOnce sync.Once
	file_pms_pms_proto_rawDescData = file_pms_pms_proto_rawDesc
)

func file_pms_pms_proto_rawDescGZIP() []byte {
	file_pms_pms_proto_rawDescOnce.Do(func() {
		file_pms_pms_proto_rawDescData = protoimpl.X.CompressGZIP(file_pms_pms_proto_rawDescData)
	})
	return file_pms_pms_proto_rawDescData
}

var file_pms_pms_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pms_pms_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pms_pms_proto_goTypes = []any{
	(ParcelStatus)(0),             // 0: pms.ParcelStatus
	(*AddParcelRequest)(nil),      // 1: pms.AddParcelRequest
	(*Checkpoint)(nil),            // 2: pms.Checkpoint
	(*AddParcelResponse)(nil),     // 3: pms.AddParcelResponse
	(*DeleteParcelRequest)(nil),   // 4: pms.DeleteParcelRequest
	(*GetParcelRequest)(nil),      // 5: pms.GetParcelRequest
	(*GetParcelResponse)(nil),     // 6: pms.GetParcelResponse
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 8: google.protobuf.Empty
}
var file_pms_pms_proto_depIdxs = []int32{
	7,  // 0: pms.AddParcelRequest.parcel_forecast_date:type_name -> google.protobuf.Timestamp
	0,  // 1: pms.AddParcelRequest.parcel_status:type_name -> pms.ParcelStatus
	2,  // 2: pms.AddParcelRequest.parcel_checkpoints:type_name -> pms.Checkpoint
	7,  // 3: pms.Checkpoint.time:type_name -> google.protobuf.Timestamp
	7,  // 4: pms.GetParcelResponse.parcel_forecast_date:type_name -> google.protobuf.Timestamp
	0,  // 5: pms.GetParcelResponse.parcel_status:type_name -> pms.ParcelStatus
	2,  // 6: pms.GetParcelResponse.parcel_checkpoints:type_name -> pms.Checkpoint
	1,  // 7: pms.ParcelsManager.AddParcel:input_type -> pms.AddParcelRequest
	4,  // 8: pms.ParcelsManager.DeleteParcel:input_type -> pms.DeleteParcelRequest
	5,  // 9: pms.ParcelsManager.GetParcel:input_type -> pms.GetParcelRequest
	3,  // 10: pms.ParcelsManager.AddParcel:output_type -> pms.AddParcelResponse
	8,  // 11: pms.ParcelsManager.DeleteParcel:output_type -> google.protobuf.Empty
	6,  // 12: pms.ParcelsManager.GetParcel:output_type -> pms.GetParcelResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pms_pms_proto_init() }
func file_pms_pms_proto_init() {
	if File_pms_pms_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pms_pms_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pms_pms_proto_goTypes,
		DependencyIndexes: file_pms_pms_proto_depIdxs,
		EnumInfos:         file_pms_pms_proto_enumTypes,
		MessageInfos:      file_pms_pms_proto_msgTypes,
	}.Build()
	File_pms_pms_proto = out.File
	file_pms_pms_proto_rawDesc = nil
	file_pms_pms_proto_goTypes = nil
	file_pms_pms_proto_depIdxs = nil
}
